"use strict";var e,r,t,n,o,i,a,s,c,l,u,g,h,f,y=require("fs"),p=require("path");function w(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function b(){if(n)return t;n=1;const o=y,i=p,a=r?e:(r=1,e={String:"string",string:"string",Long:"number",long:"number",Integer:"number",Double:"number",Float:"number",BigDecimal:"number",Date:"Date",LocalDateTime:"Date",LocalDate:"Date",LocalTime:"Date",Boolean:"boolean",List:"Array",Map:"object",Object:"object"});var s=Object.keys(a);return t=class{content;outPath;dy_type=[];constructor(e,r,t="public[^]*"){this.outPath=r,this.content=this.getFileContent(e,t)}getFileContent(e,r){const t=e.match(new RegExp(r,"g"));return t?t[0].trim():e}getStrByRegex(e){let r=this.content;for(let t=0;t<e.length;t++){const n=r.toString().match(new RegExp(e[t].regex,e[t].mode));if(!n)break;r=n}return r.hasOwnProperty("groups")?r[0].trim():r}mergeVariable(e,r,t){let n="";return e.forEach(((e,o)=>{n+=`\t${e}: ${this.typeTranslate(r[o])};  // ${t[o]?t[o]:""}\n\n`})),n}typeTranslate(e){if(!e)return"any";let r;if(e.includes("List")){let t=e.match(/(?<=<)\w+(?=>)/)[0];s.includes(t)?r=`Array<${a[t]}>`:(r=`Array<${t}>`,this.dy_type.push(t))}else s.includes(e)?r=a[e]:(r=e,this.dy_type.push(e));return r}outFile(e,r){const t=i.resolve(this.outPath);o.mkdir(t,{recursive:!0},(e=>{}));const n=i.join(t,`${e}.ts`);o.writeFile(n,r,(e=>{e?console.error("写入文件时出错:",e):console.log("TypeScript 文件写入成功")}))}importDyType(e){if(!this.dy_type.length)return"";let r="";return this.dy_type.forEach((t=>{r+=`import ${t} from "${"/"==e[e.length-1]?e:e+"/"}${t}"\n`})),r}getClassName(){return this.getStrByRegex([{regex:"(?<=class\\s)(\\S*)",mode:""}])}}}function m(){if(i)return o;i=1;const e=p;function r(r){if("string"!=typeof r)throw new Error("传入参数必须为字符串");return/(?<=\w+)(:\\|:\/\/)/.test(e.normalize(r))}return o={judgeAbsolutePath:r,getPath:function(t,n){if("string"!=typeof t)throw new Error("传入参数必须为字符串");if(n&&"string"!=typeof n)throw new Error("传入参数必须为字符串");return r(t=e.normalize(t))?t:n?e.join(n,t):e.resolve(t)}}}function d(){if(l)return c;return l=1,c=function(e,r){if("object"==r)throw new Error("引用类型不支持传入字符串");return"string"==typeof r?typeof e==r:e instanceof r}}var x=function(){if(f)return h;f=1;const e=b(),r=function(){if(s)return a;s=1;const e=y,r=p,t=m();return a=class{content;constructor(e,r){this.handleInput(e,r)}handleInput(e,r){if("file"!==e&&"folder"!==e)throw new Error("请输入正确的类型");switch(e){case"file":this.content=[this.readFile(r)];break;case"folder":this.content=this.readCatalogue(r)}}readFile(r){r=t.getPath(r);try{return e.readFileSync(r,"utf8")}catch(e){throw console.error("路径不正确，请检查你的路径\n\n",e),new Error("路径不正确，请检查你的路径")}}readCatalogue(n){let o=[];n=t.getPath(n);try{e.readdirSync(n).forEach((e=>{o.push(this.readFile(r.join(n,e)))}))}catch(e){throw console.error("路径不正确，请检查你的路径\n\n",e),new Error("路径不正确，请检查你的路径")}if(!o.length)throw new Error("当前文件夹为空，不存在任何文件");return o}}}(),t=d(),n=function(){if(g)return u;g=1;const e=d();return u=function(r){if(!e(r,Object))throw new Error("参数必须是对象");if("class_expression,variable_name,variable_type,variable_expression"!==Object.keys(r).toString())throw new Error("参数必须包含 class_expression, variable_name, variable_type, variable_expression 参数");Object.values(r).forEach((r=>{if(!e(r,Array))throw new Error("参数必须是数组");if(!r.length)throw new Error("数组不能为空");r.forEach((r=>{if(!e(r,Object))throw new Error("数组元素必须是对象");if("regex,mode"!==Object.keys(r).toString())throw new Error("对象必需包含 'regex', 'mode'");if(!r.regex)throw new Error("regex 的value不可为空");if(!e(r.regex,"string")&&!e(r.regex,String))throw new Error("regex 的value必须是字符串")}))}))}}();return h=class{constructor(o,i,a,s,c){!function(){if(!(t(o,"string")&&t(i,"string")&&t(a,"string")&&t(s,"string")))throw new Error("请传入正确类型的参数");n(c)}(),function(){new r(o,i).content.forEach((r=>{this.getVariableString(new e(r,a),c,s)}))}.call(this)}getVariableString(e,r,t){const n=e.getStrByRegex(r.class_expression),o=e.getClassName();let i=`export default ${n} {\n${e.mergeVariable(e.getStrByRegex(r.variable_name),e.getStrByRegex(r.variable_type),e.getStrByRegex(r.variable_expression))}}`;const a=e.importDyType(t);e.outFile(o,a+i)}}}(),E=w(x);module.exports=E;
